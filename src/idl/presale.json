{
  "address": "2TEbURHCQNsVyGFUm2appkEsuSShKkUUdVqtC5Xn7zw9",
  "metadata": {
    "name": "presale",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Created with Anchor"
  },
  "instructions": [
    {
      "name": "claim",
      "discriminator": [62, 198, 214, 193, 213, 159, 108, 210],
      "accounts": [
        {
          "name": "presale",
          "writable": true,
          "relations": ["escrow"]
        },
        {
          "name": "base_token_vault",
          "writable": true,
          "relations": ["presale"]
        },
        {
          "name": "base_mint",
          "relations": ["presale"]
        },
        {
          "name": "presale_authority",
          "address": "GwyAYgXqXaMAC5cHmwecU7uuu2bGiPHiP8eQY2kSNnkc"
        },
        {
          "name": "escrow",
          "writable": true
        },
        {
          "name": "owner_base_token"
        },
        {
          "name": "owner",
          "signer": true,
          "relations": ["escrow"]
        },
        {
          "name": "token_program"
        },
        {
          "name": "memo_program",
          "address": "MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr"
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": [
        {
          "name": "remaining_accounts_info",
          "type": {
            "defined": {
              "name": "RemainingAccountsInfo"
            }
          }
        }
      ]
    },
    {
      "name": "close_escrow",
      "discriminator": [139, 171, 94, 146, 191, 91, 144, 50],
      "accounts": [
        {
          "name": "presale",
          "writable": true,
          "relations": ["escrow"]
        },
        {
          "name": "escrow",
          "writable": true
        },
        {
          "name": "owner",
          "signer": true,
          "relations": ["escrow"]
        },
        {
          "name": "rent_receiver",
          "writable": true
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": []
    },
    {
      "name": "close_fixed_price_presale_args",
      "discriminator": [125, 65, 70, 247, 99, 200, 42, 225],
      "accounts": [
        {
          "name": "fixed_price_presale_args",
          "writable": true
        },
        {
          "name": "owner",
          "writable": true,
          "signer": true,
          "relations": ["fixed_price_presale_args"]
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": []
    },
    {
      "name": "close_merkle_proof_metadata",
      "discriminator": [23, 52, 170, 30, 252, 47, 100, 129],
      "accounts": [
        {
          "name": "presale",
          "relations": ["merkle_proof_metadata"]
        },
        {
          "name": "merkle_proof_metadata",
          "writable": true
        },
        {
          "name": "rent_receiver",
          "writable": true
        },
        {
          "name": "owner",
          "signer": true,
          "relations": ["presale"]
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": []
    },
    {
      "name": "create_merkle_proof_metadata",
      "discriminator": [151, 46, 163, 52, 181, 178, 47, 227],
      "accounts": [
        {
          "name": "presale"
        },
        {
          "name": "merkle_proof_metadata",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109, 101, 114, 107, 108, 101, 95, 112, 114, 111, 111, 102
                ]
              },
              {
                "kind": "account",
                "path": "presale"
              }
            ]
          }
        },
        {
          "name": "owner",
          "writable": true,
          "signer": true,
          "relations": ["presale"]
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": [
        {
          "name": "proof_url",
          "type": "string"
        }
      ]
    },
    {
      "name": "create_merkle_root_config",
      "discriminator": [55, 243, 253, 240, 78, 186, 232, 166],
      "accounts": [
        {
          "name": "presale"
        },
        {
          "name": "merkle_root_config",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [109, 101, 114, 107, 108, 101, 95, 114, 111, 111, 116]
              },
              {
                "kind": "account",
                "path": "presale"
              },
              {
                "kind": "arg",
                "path": "params.version"
              }
            ]
          }
        },
        {
          "name": "creator",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": [
        {
          "name": "params",
          "type": {
            "defined": {
              "name": "CreateMerkleRootConfigParams"
            }
          }
        }
      ]
    },
    {
      "name": "create_operator",
      "discriminator": [145, 40, 238, 75, 181, 252, 59, 11],
      "accounts": [
        {
          "name": "operator",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [111, 112, 101, 114, 97, 116, 111, 114]
              },
              {
                "kind": "account",
                "path": "creator"
              },
              {
                "kind": "account",
                "path": "operator_owner"
              }
            ]
          }
        },
        {
          "name": "operator_owner"
        },
        {
          "name": "creator",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": []
    },
    {
      "name": "create_permissioned_escrow_with_creator",
      "discriminator": [131, 130, 26, 39, 200, 38, 18, 173],
      "accounts": [
        {
          "name": "presale",
          "writable": true
        },
        {
          "name": "escrow",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [101, 115, 99, 114, 111, 119]
              },
              {
                "kind": "account",
                "path": "presale"
              },
              {
                "kind": "account",
                "path": "owner"
              }
            ]
          }
        },
        {
          "name": "owner"
        },
        {
          "name": "operator"
        },
        {
          "name": "operator_owner",
          "signer": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": []
    },
    {
      "name": "create_permissioned_escrow_with_merkle_proof",
      "discriminator": [62, 200, 54, 145, 59, 239, 91, 5],
      "accounts": [
        {
          "name": "presale",
          "writable": true,
          "relations": ["merkle_root_config"]
        },
        {
          "name": "escrow",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [101, 115, 99, 114, 111, 119]
              },
              {
                "kind": "account",
                "path": "presale"
              },
              {
                "kind": "account",
                "path": "owner"
              }
            ]
          }
        },
        {
          "name": "owner"
        },
        {
          "name": "merkle_root_config"
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": [
        {
          "name": "proof",
          "type": {
            "vec": {
              "array": ["u8", 32]
            }
          }
        }
      ]
    },
    {
      "name": "create_permissionless_escrow",
      "discriminator": [241, 26, 9, 26, 248, 201, 151, 0],
      "accounts": [
        {
          "name": "presale",
          "writable": true
        },
        {
          "name": "escrow",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [101, 115, 99, 114, 111, 119]
              },
              {
                "kind": "account",
                "path": "presale"
              },
              {
                "kind": "account",
                "path": "owner"
              }
            ]
          }
        },
        {
          "name": "owner"
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": []
    },
    {
      "name": "creator_withdraw",
      "discriminator": [92, 117, 206, 254, 174, 108, 37, 106],
      "accounts": [
        {
          "name": "presale",
          "writable": true
        },
        {
          "name": "presale_authority",
          "address": "GwyAYgXqXaMAC5cHmwecU7uuu2bGiPHiP8eQY2kSNnkc"
        },
        {
          "name": "owner_token",
          "writable": true
        },
        {
          "name": "owner",
          "signer": true,
          "relations": ["presale"]
        },
        {
          "name": "token_program"
        },
        {
          "name": "memo_program",
          "address": "MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr"
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": [
        {
          "name": "remaining_accounts_info",
          "type": {
            "defined": {
              "name": "RemainingAccountsInfo"
            }
          }
        }
      ]
    },
    {
      "name": "deposit",
      "discriminator": [242, 35, 198, 137, 82, 225, 242, 182],
      "accounts": [
        {
          "name": "presale",
          "writable": true,
          "relations": ["escrow"]
        },
        {
          "name": "quote_token_vault",
          "writable": true,
          "relations": ["presale"]
        },
        {
          "name": "quote_mint",
          "relations": ["presale"]
        },
        {
          "name": "escrow",
          "writable": true
        },
        {
          "name": "payer_quote_token",
          "writable": true
        },
        {
          "name": "payer",
          "signer": true
        },
        {
          "name": "token_program"
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": [
        {
          "name": "max_amount",
          "type": "u64"
        },
        {
          "name": "remaining_account_info",
          "type": {
            "defined": {
              "name": "RemainingAccountsInfo"
            }
          }
        }
      ]
    },
    {
      "name": "initialize_fixed_price_presale_args",
      "docs": ["Create presale vault related functions"],
      "discriminator": [224, 80, 127, 193, 204, 143, 243, 194],
      "accounts": [
        {
          "name": "fixed_price_presale_params",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  102, 105, 120, 101, 100, 95, 112, 114, 105, 99, 101, 95, 112,
                  97, 114, 97, 109
                ]
              },
              {
                "kind": "arg",
                "path": "params.presale"
              }
            ]
          }
        },
        {
          "name": "owner"
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": [
        {
          "name": "params",
          "type": {
            "defined": {
              "name": "InitializeFixedPricePresaleExtraArgs"
            }
          }
        }
      ]
    },
    {
      "name": "initialize_presale",
      "discriminator": [9, 174, 12, 126, 150, 119, 68, 100],
      "accounts": [
        {
          "name": "presale_mint"
        },
        {
          "name": "presale",
          "docs": ["presale address"],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [112, 114, 101, 115, 97, 108, 101]
              },
              {
                "kind": "account",
                "path": "base"
              },
              {
                "kind": "account",
                "path": "presale_mint"
              },
              {
                "kind": "account",
                "path": "quote_token_mint"
              }
            ]
          }
        },
        {
          "name": "presale_authority",
          "address": "GwyAYgXqXaMAC5cHmwecU7uuu2bGiPHiP8eQY2kSNnkc"
        },
        {
          "name": "quote_token_mint"
        },
        {
          "name": "presale_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [98, 97, 115, 101, 95, 118, 97, 117, 108, 116]
              },
              {
                "kind": "account",
                "path": "presale"
              }
            ]
          }
        },
        {
          "name": "quote_token_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [113, 117, 111, 116, 101, 95, 118, 97, 117, 108, 116]
              },
              {
                "kind": "account",
                "path": "presale"
              }
            ]
          }
        },
        {
          "name": "payer_presale_token",
          "writable": true
        },
        {
          "name": "creator"
        },
        {
          "name": "base",
          "signer": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "base_token_program"
        },
        {
          "name": "quote_token_program"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": [
        {
          "name": "params",
          "type": {
            "defined": {
              "name": "InitializePresaleArgs"
            }
          }
        },
        {
          "name": "remaining_account_info",
          "type": {
            "defined": {
              "name": "RemainingAccountsInfo"
            }
          }
        }
      ]
    },
    {
      "name": "perform_unsold_base_token_action",
      "discriminator": [101, 141, 8, 65, 176, 225, 47, 110],
      "accounts": [
        {
          "name": "presale",
          "writable": true
        },
        {
          "name": "base_token_vault",
          "writable": true,
          "relations": ["presale"]
        },
        {
          "name": "base_mint",
          "writable": true,
          "relations": ["presale"]
        },
        {
          "name": "presale_authority",
          "address": "GwyAYgXqXaMAC5cHmwecU7uuu2bGiPHiP8eQY2kSNnkc"
        },
        {
          "name": "creator_base_token",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "presale"
              },
              {
                "kind": "account",
                "path": "token_program"
              },
              {
                "kind": "account",
                "path": "base_mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140, 151, 37, 143, 78, 36, 137, 241, 187, 61, 16, 41, 20, 142,
                13, 131, 11, 90, 19, 153, 218, 255, 16, 132, 4, 142, 123, 216,
                219, 233, 248, 89
              ]
            }
          }
        },
        {
          "name": "token_program"
        },
        {
          "name": "memo_program",
          "address": "MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr"
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": [
        {
          "name": "remaining_accounts_info",
          "type": {
            "defined": {
              "name": "RemainingAccountsInfo"
            }
          }
        }
      ]
    },
    {
      "name": "refresh_escrow",
      "discriminator": [68, 237, 17, 237, 147, 201, 27, 169],
      "accounts": [
        {
          "name": "presale",
          "relations": ["escrow"]
        },
        {
          "name": "escrow",
          "writable": true
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": []
    },
    {
      "name": "revoke_operator",
      "discriminator": [185, 25, 87, 77, 88, 8, 30, 175],
      "accounts": [
        {
          "name": "operator",
          "writable": true
        },
        {
          "name": "creator",
          "writable": true,
          "signer": true,
          "relations": ["operator"]
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": []
    },
    {
      "name": "withdraw",
      "discriminator": [183, 18, 70, 156, 148, 109, 161, 34],
      "accounts": [
        {
          "name": "presale",
          "writable": true,
          "relations": ["escrow"]
        },
        {
          "name": "quote_token_vault",
          "writable": true,
          "relations": ["presale"]
        },
        {
          "name": "quote_mint",
          "relations": ["presale"]
        },
        {
          "name": "presale_authority",
          "address": "GwyAYgXqXaMAC5cHmwecU7uuu2bGiPHiP8eQY2kSNnkc"
        },
        {
          "name": "escrow",
          "writable": true
        },
        {
          "name": "owner_quote_token",
          "writable": true
        },
        {
          "name": "owner",
          "signer": true,
          "relations": ["escrow"]
        },
        {
          "name": "token_program"
        },
        {
          "name": "memo_program",
          "address": "MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr"
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "remaining_account_info",
          "type": {
            "defined": {
              "name": "RemainingAccountsInfo"
            }
          }
        }
      ]
    },
    {
      "name": "withdraw_remaining_quote",
      "discriminator": [54, 253, 188, 34, 100, 145, 59, 127],
      "accounts": [
        {
          "name": "presale",
          "writable": true,
          "relations": ["escrow"]
        },
        {
          "name": "quote_token_vault",
          "writable": true,
          "relations": ["presale"]
        },
        {
          "name": "quote_mint",
          "relations": ["presale"]
        },
        {
          "name": "presale_authority",
          "address": "GwyAYgXqXaMAC5cHmwecU7uuu2bGiPHiP8eQY2kSNnkc"
        },
        {
          "name": "escrow",
          "writable": true
        },
        {
          "name": "owner_quote_token",
          "writable": true
        },
        {
          "name": "owner",
          "signer": true,
          "relations": ["escrow"]
        },
        {
          "name": "token_program"
        },
        {
          "name": "memo_program",
          "address": "MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr"
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95, 95, 101, 118, 101, 110, 116, 95, 97, 117, 116, 104, 111,
                  114, 105, 116, 121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": [
        {
          "name": "remaining_accounts_info",
          "type": {
            "defined": {
              "name": "RemainingAccountsInfo"
            }
          }
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "Escrow",
      "discriminator": [31, 213, 123, 187, 186, 22, 218, 155]
    },
    {
      "name": "FixedPricePresaleExtraArgs",
      "discriminator": [75, 139, 198, 148, 132, 54, 191, 83]
    },
    {
      "name": "MerkleProofMetadata",
      "discriminator": [133, 24, 30, 217, 240, 20, 222, 100]
    },
    {
      "name": "MerkleRootConfig",
      "discriminator": [103, 2, 222, 217, 73, 50, 187, 39]
    },
    {
      "name": "Operator",
      "discriminator": [219, 31, 188, 145, 69, 139, 204, 117]
    },
    {
      "name": "Presale",
      "discriminator": [38, 215, 222, 14, 115, 220, 52, 168]
    }
  ],
  "events": [
    {
      "name": "EvtClaim",
      "discriminator": [219, 247, 169, 104, 92, 196, 174, 1]
    },
    {
      "name": "EvtCreatorWithdraw",
      "discriminator": [88, 189, 89, 236, 7, 65, 245, 77]
    },
    {
      "name": "EvtDeposit",
      "discriminator": [245, 7, 99, 173, 152, 218, 66, 168]
    },
    {
      "name": "EvtEscrowClose",
      "discriminator": [25, 236, 63, 221, 35, 39, 134, 197]
    },
    {
      "name": "EvtEscrowCreate",
      "discriminator": [206, 39, 252, 12, 21, 45, 79, 56]
    },
    {
      "name": "EvtEscrowRefresh",
      "discriminator": [122, 224, 203, 206, 253, 154, 149, 172]
    },
    {
      "name": "EvtFixedPricePresaleArgsClose",
      "discriminator": [232, 209, 108, 196, 129, 150, 155, 161]
    },
    {
      "name": "EvtFixedPricePresaleArgsCreate",
      "discriminator": [150, 2, 196, 99, 99, 233, 14, 134]
    },
    {
      "name": "EvtMerkleProofMetadataClose",
      "discriminator": [89, 204, 254, 22, 230, 127, 117, 103]
    },
    {
      "name": "EvtMerkleProofMetadataCreate",
      "discriminator": [58, 148, 90, 56, 95, 57, 98, 175]
    },
    {
      "name": "EvtMerkleRootConfigCreate",
      "discriminator": [124, 71, 226, 147, 30, 112, 202, 20]
    },
    {
      "name": "EvtOperatorCreate",
      "discriminator": [102, 33, 72, 210, 83, 100, 255, 79]
    },
    {
      "name": "EvtPerformUnsoldBaseTokenAction",
      "discriminator": [101, 134, 249, 143, 220, 171, 228, 130]
    },
    {
      "name": "EvtPresaleVaultCreate",
      "discriminator": [215, 193, 132, 209, 72, 47, 198, 176]
    },
    {
      "name": "EvtWithdraw",
      "discriminator": [149, 193, 150, 199, 244, 166, 129, 114]
    },
    {
      "name": "EvtWithdrawRemainingQuote",
      "discriminator": [128, 150, 147, 65, 211, 26, 124, 208]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "InvalidMintMetadata",
      "msg": "Invalid mint metadata"
    },
    {
      "code": 6001,
      "name": "InvalidTokenInfo",
      "msg": "Invalid token info"
    },
    {
      "code": 6002,
      "name": "InvalidTokenSupply",
      "msg": "Invalid token supply"
    },
    {
      "code": 6003,
      "name": "InvalidPresaleInfo",
      "msg": "Invalid presale info"
    },
    {
      "code": 6004,
      "name": "InvalidQuoteMint",
      "msg": "Invalid quote mint"
    },
    {
      "code": 6005,
      "name": "InvalidBaseMint",
      "msg": "Invalid base mint"
    },
    {
      "code": 6006,
      "name": "InvalidLockVestingInfo",
      "msg": "Invalid lock vesting info"
    },
    {
      "code": 6007,
      "name": "InvalidTokenPrice",
      "msg": "Invalid token price"
    },
    {
      "code": 6008,
      "name": "MissingPresaleExtraParams",
      "msg": "Missing presale extra params account"
    },
    {
      "code": 6009,
      "name": "ZeroTokenAmount",
      "msg": "Zero token amount"
    },
    {
      "code": 6010,
      "name": "UnsupportedToken2022MintOrExtension",
      "msg": "Token2022 extensions or native mint is not supported"
    },
    {
      "code": 6011,
      "name": "InvalidCreatorAccount",
      "msg": "Invalid creator account"
    },
    {
      "code": 6012,
      "name": "PresaleNotOpenForDeposit",
      "msg": "Presale is not open for deposit"
    },
    {
      "code": 6013,
      "name": "PresaleNotOpenForWithdraw",
      "msg": "Presale is not open for withdraw"
    },
    {
      "code": 6014,
      "name": "PresaleNotOpenForWithdrawRemainingQuote",
      "msg": "Presale is not open for withdraw remaining quote"
    },
    {
      "code": 6015,
      "name": "InvalidPresaleWhitelistMode",
      "msg": "Invalid presale whitelist mode"
    },
    {
      "code": 6016,
      "name": "PresaleEnded",
      "msg": "Presale is ended"
    },
    {
      "code": 6017,
      "name": "PresaleNotOpenForClaim",
      "msg": "Presale is not open for claim"
    },
    {
      "code": 6018,
      "name": "InvalidMerkleProof",
      "msg": "Invalid merkle proof"
    },
    {
      "code": 6019,
      "name": "DepositAmountOutOfCap",
      "msg": "Deposit amount out of cap"
    },
    {
      "code": 6020,
      "name": "MathOverflow",
      "msg": "Math overflow"
    },
    {
      "code": 6021,
      "name": "InsufficientEscrowBalance",
      "msg": "Insufficient escrow balance"
    },
    {
      "code": 6022,
      "name": "RemainingQuoteAlreadyWithdrawn",
      "msg": "Remaining quote has already been withdrawn"
    },
    {
      "code": 6023,
      "name": "PresaleNotCompleted",
      "msg": "Presale not completed"
    },
    {
      "code": 6024,
      "name": "NoUnsoldTokens",
      "msg": "No unsold tokens"
    },
    {
      "code": 6025,
      "name": "EscrowNotEmpty",
      "msg": "Escrow is not empty"
    },
    {
      "code": 6026,
      "name": "InvalidUnsoldTokenAction",
      "msg": "Invalid unsold token action"
    },
    {
      "code": 6027,
      "name": "CreatorAlreadyWithdrawn",
      "msg": "Creator has already withdrawn"
    },
    {
      "code": 6028,
      "name": "EscrowNotRefreshed",
      "msg": "Escrow not refreshed"
    },
    {
      "code": 6029,
      "name": "UndeterminedError",
      "msg": "Undetermined error"
    },
    {
      "code": 6030,
      "name": "InvalidTokenVault",
      "msg": "Invalid token vault"
    },
    {
      "code": 6031,
      "name": "InvalidRemainingAccountSlice",
      "msg": "Invalid remaining account slice"
    },
    {
      "code": 6032,
      "name": "DuplicatedRemainingAccountTypes",
      "msg": "Duplicated remaining account types"
    },
    {
      "code": 6033,
      "name": "MissingRemainingAccountForTransferHook",
      "msg": "Missing remaining account for transfer hook"
    },
    {
      "code": 6034,
      "name": "NoTransferHookProgram",
      "msg": "No transfer hook program"
    },
    {
      "code": 6035,
      "name": "InvalidOperator",
      "msg": "Invalid operator"
    },
    {
      "code": 6036,
      "name": "NoUnsoldBaseTokens",
      "msg": "No unsold base tokens"
    },
    {
      "code": 6037,
      "name": "UnsoldBaseTokenActionAlreadyPerformed",
      "msg": "Unsold base token action already performed"
    }
  ],
  "types": [
    {
      "name": "AccountsType",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "TransferHookBase"
          },
          {
            "name": "TransferHookQuote"
          }
        ]
      }
    },
    {
      "name": "CreateMerkleRootConfigParams",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "root",
            "docs": ["The 256-bit merkle root."],
            "type": {
              "array": ["u8", 32]
            }
          },
          {
            "name": "version",
            "docs": ["Version"],
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "Escrow",
      "serialization": "bytemuck",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "presale",
            "type": "pubkey"
          },
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "total_deposit",
            "type": "u64"
          },
          {
            "name": "total_claimed_token",
            "type": "u64"
          },
          {
            "name": "is_remaining_quote_withdrawn",
            "type": "u8"
          },
          {
            "name": "padding0",
            "type": {
              "array": ["u8", 7]
            }
          },
          {
            "name": "pending_claim_token",
            "type": "u64"
          },
          {
            "name": "created_at",
            "type": "u64"
          },
          {
            "name": "last_refreshed_at",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "EvtClaim",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "presale",
            "type": "pubkey"
          },
          {
            "name": "escrow",
            "type": "pubkey"
          },
          {
            "name": "claim_amount",
            "type": "u64"
          },
          {
            "name": "escrow_total_claim_amount",
            "type": "u64"
          },
          {
            "name": "presale_total_claim_amount",
            "type": "u64"
          },
          {
            "name": "owner",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "EvtCreatorWithdraw",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "presale",
            "type": "pubkey"
          },
          {
            "name": "amount",
            "type": "u64"
          },
          {
            "name": "creator",
            "type": "pubkey"
          },
          {
            "name": "presale_progress",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "EvtDeposit",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "presale",
            "type": "pubkey"
          },
          {
            "name": "escrow",
            "type": "pubkey"
          },
          {
            "name": "deposit_amount",
            "type": "u64"
          },
          {
            "name": "escrow_total_deposit_amount",
            "type": "u64"
          },
          {
            "name": "presale_total_deposit_amount",
            "type": "u64"
          },
          {
            "name": "owner",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "EvtEscrowClose",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "presale",
            "type": "pubkey"
          },
          {
            "name": "escrow",
            "type": "pubkey"
          },
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "rent_receiver",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "EvtEscrowCreate",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "presale",
            "type": "pubkey"
          },
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "whitelist_mode",
            "type": "u8"
          },
          {
            "name": "total_escrow_count",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "EvtEscrowRefresh",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "presale",
            "type": "pubkey"
          },
          {
            "name": "escrow",
            "type": "pubkey"
          },
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "current_timestamp",
            "type": "u64"
          },
          {
            "name": "pending_claim_token",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "EvtFixedPricePresaleArgsClose",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "presale",
            "type": "pubkey"
          },
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "fixed_price_presale_args",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "EvtFixedPricePresaleArgsCreate",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "presale",
            "type": "pubkey"
          },
          {
            "name": "unsold_token_action",
            "type": "u8"
          },
          {
            "name": "q_price",
            "type": "u128"
          }
        ]
      }
    },
    {
      "name": "EvtMerkleProofMetadataClose",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "presale",
            "type": "pubkey"
          },
          {
            "name": "merkle_proof_metadata",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "EvtMerkleProofMetadataCreate",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "presale",
            "type": "pubkey"
          },
          {
            "name": "merkle_proof_metadata",
            "type": "pubkey"
          },
          {
            "name": "proof_url",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "EvtMerkleRootConfigCreate",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "config",
            "type": "pubkey"
          },
          {
            "name": "presale",
            "type": "pubkey"
          },
          {
            "name": "version",
            "type": "u64"
          },
          {
            "name": "root",
            "type": {
              "array": ["u8", 32]
            }
          }
        ]
      }
    },
    {
      "name": "EvtOperatorCreate",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "creator",
            "type": "pubkey"
          },
          {
            "name": "operator",
            "type": "pubkey"
          },
          {
            "name": "operator_owner",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "EvtPerformUnsoldBaseTokenAction",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "presale",
            "type": "pubkey"
          },
          {
            "name": "total_token_unsold",
            "type": "u64"
          },
          {
            "name": "unsold_base_token_action",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "EvtPresaleVaultCreate",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "base_mint",
            "type": "pubkey"
          },
          {
            "name": "quote_mint",
            "type": "pubkey"
          },
          {
            "name": "buyer_maximum_deposit_cap",
            "type": "u64"
          },
          {
            "name": "buyer_minimum_deposit_cap",
            "type": "u64"
          },
          {
            "name": "lock_duration",
            "type": "u64"
          },
          {
            "name": "vest_duration",
            "type": "u64"
          },
          {
            "name": "whitelist_mode",
            "type": "u8"
          },
          {
            "name": "presale_mode",
            "type": "u8"
          },
          {
            "name": "presale_start_time",
            "type": "u64"
          },
          {
            "name": "presale_end_time",
            "type": "u64"
          },
          {
            "name": "presale_maximum_cap",
            "type": "u64"
          },
          {
            "name": "presale_minimum_cap",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "EvtWithdraw",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "presale",
            "type": "pubkey"
          },
          {
            "name": "escrow",
            "type": "pubkey"
          },
          {
            "name": "withdraw_amount",
            "type": "u64"
          },
          {
            "name": "escrow_total_deposit_amount",
            "type": "u64"
          },
          {
            "name": "presale_total_deposit_amount",
            "type": "u64"
          },
          {
            "name": "owner",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "EvtWithdrawRemainingQuote",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "presale",
            "type": "pubkey"
          },
          {
            "name": "escrow",
            "type": "pubkey"
          },
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "amount_refunded",
            "type": "u64"
          },
          {
            "name": "presale_total_refunded_quote_token",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "FixedPricePresaleExtraArgs",
      "serialization": "bytemuck",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "unsold_token_action",
            "type": "u8"
          },
          {
            "name": "padding0",
            "type": {
              "array": ["u8", 15]
            }
          },
          {
            "name": "q_price",
            "type": "u128"
          },
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "presale",
            "type": "pubkey"
          },
          {
            "name": "padding1",
            "type": {
              "array": ["u128", 4]
            }
          }
        ]
      }
    },
    {
      "name": "InitializeFixedPricePresaleExtraArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "presale",
            "type": "pubkey"
          },
          {
            "name": "unsold_token_action",
            "type": "u8"
          },
          {
            "name": "q_price",
            "type": "u128"
          },
          {
            "name": "padding",
            "type": {
              "array": ["u64", 4]
            }
          }
        ]
      }
    },
    {
      "name": "InitializePresaleArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "tokenomic",
            "type": {
              "defined": {
                "name": "TokenomicArgs"
              }
            }
          },
          {
            "name": "presale_params",
            "type": {
              "defined": {
                "name": "PresaleArgs"
              }
            }
          },
          {
            "name": "locked_vesting_params",
            "type": {
              "option": {
                "defined": {
                  "name": "LockedVestingArgs"
                }
              }
            }
          },
          {
            "name": "padding",
            "type": {
              "array": ["u64", 4]
            }
          }
        ]
      }
    },
    {
      "name": "LockedVestingArgs",
      "docs": ["Vest user bought token"],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "lock_duration",
            "docs": ["Lock duration until buyer can claim the token"],
            "type": "u64"
          },
          {
            "name": "vest_duration",
            "docs": ["Vesting duration until buyer can claim the token"],
            "type": "u64"
          },
          {
            "name": "padding",
            "type": {
              "array": ["u64", 4]
            }
          }
        ]
      }
    },
    {
      "name": "MerkleProofMetadata",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "presale",
            "docs": ["Presale address"],
            "type": "pubkey"
          },
          {
            "name": "padding",
            "type": {
              "array": ["u64", 16]
            }
          },
          {
            "name": "proof_url",
            "docs": ["Merkle root proof URL"],
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "MerkleRootConfig",
      "serialization": "bytemuck",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "root",
            "docs": ["The 256-bit merkle root."],
            "type": {
              "array": ["u8", 32]
            }
          },
          {
            "name": "padding0",
            "docs": ["Padding for future use"],
            "type": "u64"
          },
          {
            "name": "presale",
            "docs": ["Presale pubkey that config is belong"],
            "type": "pubkey"
          },
          {
            "name": "version",
            "docs": ["Version"],
            "type": "u64"
          },
          {
            "name": "_padding",
            "docs": ["Padding for further use"],
            "type": {
              "array": ["u128", 4]
            }
          }
        ]
      }
    },
    {
      "name": "Operator",
      "serialization": "bytemuck",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "creator",
            "type": "pubkey"
          },
          {
            "name": "padding",
            "type": {
              "array": ["u64", 4]
            }
          }
        ]
      }
    },
    {
      "name": "Presale",
      "serialization": "bytemuck",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "docs": ["Owner of presale"],
            "type": "pubkey"
          },
          {
            "name": "quote_mint",
            "docs": ["Quote token mint"],
            "type": "pubkey"
          },
          {
            "name": "base_mint",
            "docs": ["Base token"],
            "type": "pubkey"
          },
          {
            "name": "base_token_vault",
            "docs": ["Base token vault"],
            "type": "pubkey"
          },
          {
            "name": "quote_token_vault",
            "docs": ["Quote token vault"],
            "type": "pubkey"
          },
          {
            "name": "base",
            "docs": ["Base key"],
            "type": "pubkey"
          },
          {
            "name": "presale_maximum_cap",
            "docs": ["Presale target raised capital"],
            "type": "u64"
          },
          {
            "name": "presale_minimum_cap",
            "docs": [
              "Presale minimum raised capital. Else, presale consider as failed."
            ],
            "type": "u64"
          },
          {
            "name": "presale_start_time",
            "docs": ["When presale starts"],
            "type": "u64"
          },
          {
            "name": "presale_end_time",
            "docs": [
              "When presale ends. Presale can be ended earlier by creator if raised capital is reached (based on presale mode)"
            ],
            "type": "u64"
          },
          {
            "name": "buyer_minimum_deposit_cap",
            "docs": [
              "This is the minimum amount of quote token that a user can deposit to the presale"
            ],
            "type": "u64"
          },
          {
            "name": "buyer_maximum_deposit_cap",
            "docs": [
              "This is the maximum amount of quote token that a user can deposit to the presale"
            ],
            "type": "u64"
          },
          {
            "name": "presale_supply",
            "docs": [
              "Total base token supply that can be bought by presale participants"
            ],
            "type": "u64"
          },
          {
            "name": "total_deposit",
            "docs": ["Total deposited quote token"],
            "type": "u64"
          },
          {
            "name": "total_escrow",
            "docs": ["Total number of depositors. For statistic purpose only"],
            "type": "u64"
          },
          {
            "name": "created_at",
            "docs": ["When was the presale created"],
            "type": "u64"
          },
          {
            "name": "lock_duration",
            "docs": ["Duration of bought token will be locked until claimable"],
            "type": "u64"
          },
          {
            "name": "vest_duration",
            "docs": ["Duration of bought token will be vested until claimable"],
            "type": "u64"
          },
          {
            "name": "lock_start_time",
            "docs": ["When the lock starts"],
            "type": "u64"
          },
          {
            "name": "lock_end_time",
            "docs": ["When the lock ends"],
            "type": "u64"
          },
          {
            "name": "vesting_start_time",
            "docs": ["When the vesting starts"],
            "type": "u64"
          },
          {
            "name": "vesting_end_time",
            "docs": ["When the vesting ends"],
            "type": "u64"
          },
          {
            "name": "total_claimed_token",
            "docs": ["Total claimed base token. For statistic purpose only"],
            "type": "u64"
          },
          {
            "name": "total_refunded_quote_token",
            "docs": ["Total refunded quote token. For statistic purpose only"],
            "type": "u64"
          },
          {
            "name": "padding0",
            "type": "u64"
          },
          {
            "name": "whitelist_mode",
            "docs": ["Whitelist mode"],
            "type": "u8"
          },
          {
            "name": "presale_mode",
            "docs": ["Presale mode"],
            "type": "u8"
          },
          {
            "name": "has_creator_withdrawn",
            "docs": ["Determine whether creator withdrawn the raised capital"],
            "type": "u8"
          },
          {
            "name": "base_token_program_flag",
            "docs": ["Base token program flag"],
            "type": "u8"
          },
          {
            "name": "quote_token_program_flag",
            "docs": ["Quote token program flag"],
            "type": "u8"
          },
          {
            "name": "fixed_price_presale_unsold_token_action",
            "docs": [
              "What to do with unsold base token. Only applicable for fixed price presale mode"
            ],
            "type": "u8"
          },
          {
            "name": "is_fixed_price_presale_unsold_token_action_performed",
            "type": "u8"
          },
          {
            "name": "padding2",
            "type": {
              "array": ["u8", 17]
            }
          },
          {
            "name": "fixed_price_presale_q_price",
            "docs": [
              "Presale rate. Only applicable for fixed price presale mode"
            ],
            "type": "u128"
          }
        ]
      }
    },
    {
      "name": "PresaleArgs",
      "docs": ["Presale parameters"],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "presale_maximum_cap",
            "type": "u64"
          },
          {
            "name": "presale_minimum_cap",
            "type": "u64"
          },
          {
            "name": "buyer_minimum_deposit_cap",
            "type": "u64"
          },
          {
            "name": "buyer_maximum_deposit_cap",
            "type": "u64"
          },
          {
            "name": "presale_start_time",
            "type": "u64"
          },
          {
            "name": "presale_end_time",
            "type": "u64"
          },
          {
            "name": "whitelist_mode",
            "type": "u8"
          },
          {
            "name": "presale_mode",
            "type": "u8"
          },
          {
            "name": "padding",
            "type": {
              "array": ["u64", 4]
            }
          }
        ]
      }
    },
    {
      "name": "RemainingAccountsInfo",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "slices",
            "type": {
              "vec": {
                "defined": {
                  "name": "RemainingAccountsSlice"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "RemainingAccountsSlice",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "accounts_type",
            "type": {
              "defined": {
                "name": "AccountsType"
              }
            }
          },
          {
            "name": "length",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "TokenomicArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "presale_pool_supply",
            "type": "u64"
          },
          {
            "name": "padding",
            "type": {
              "array": ["u64", 4]
            }
          }
        ]
      }
    }
  ]
}
